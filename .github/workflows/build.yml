name: Build and push new releases to Docker Hub

on:
  schedule:
    - cron: "0 0 * * *"

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.value }}
    env:
      repo: bojand/ghz
    steps:
      - name: Install skopeo
        run: sudo apt install skopeo

      - name: Get latest tag if more recent than latest DockerHub tag
        id: get_tag
        run: |
          get_latest() {
            local git=$(curl --silent "https://api.github.com/repos/bojand/ghz/git/refs/tags" | jq -r '.[].ref' | sed '1d' | sed 's/^refs\/tags\///g' | paste -d, -s)
            local docker=$(skopeo inspect docker://obvionaoe/ghz | jq -r '.RepoTags[]' | sed '1d' | sort -V | paste -d, -s)

            local result="\""
            local flag=0

            for i in ${git//,/ }
            do
              for j in ${docker//,/ }
              do
                if [[ "$i" == "$j" ]]; then
                  flag=1
                  break
                fi
              done

              if [[ $flag -eq 1 ]]; then
                flag=0
                continue
              fi

              result+="$i,"
            done

            result=${result::-1}
            result+="\""

            echo $result | jq 'split(",")'
          }

          echo "::set-output name=value::$(get_latest)"
  
  docker:
    needs: [ setup ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        value: ${{fromJson(needs.setup.outputs.matrix)}}
    steps:
      - name: Cache Docker build layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          tags:  ${{ github.repository }}:${{ matrix.value }},${{ github.repository }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: APP_VERSION=${{ matrix.value }}
